// =========================================
//  Mixins
// =========================================

// Slanted effect
@mixin skewed {
  position: relative;
  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 50px; 
    position: absolute;
    transform: skewY(-2deg);
    @content;
  }
}

// Center containers
@mixin center($w) {
  width: $w;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

// Rounded elements
@mixin roundy($dim, $brdr: null) {
  width: $dim;
  height: $dim;
  border: $brdr;
  border-radius: 50%;
}

// Create a Flex Container
@mixin flexy(
  $disp: flex,
  $flex-dir: null,
  $flex-wrap: null,
  $just-cont: null) {
  display: $disp;
  flex-direction: $flex-dir;
  flex-wrap: $flex-wrap;
  justify-content: $just-cont;
}

// Media queries
@mixin mq($break) {
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, 'sm'); 
// @warn - @errors
  @if $value == null {
    @errors "`#{$break}` is not a valid breakpoint name.";
  }

  @else if $value < $sm {
    @media (max-width: $value) {
      @content;       
    }          
  }    
  @else {
    @media (min-width: $value) {
      @content;       
    }             
  }  
}


// Colors
@mixin themes($map) {
  @each $theme, $color in $map {
    &-#{$theme} {
      color: $color;
    }
  } 
}